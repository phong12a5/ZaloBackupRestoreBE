services:
  eureka-server:
    image: steeltoeoss/eureka-server:latest # Try Steeltoe OSS Eureka Server image
    container_name: eureka-server
    ports:
      - "8761:8761" # Default Eureka port
    networks:
      - app-network

  mongodb:
    build:
      context: ./mongodb
      dockerfile: Dockerfile.mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./mongodb/mongo-data:/data/db
    networks:
      - app-network
      
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/ # Tell api-gateway where Eureka is
    depends_on:
      - eureka-server
    networks:
      - app-network
  
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongodb:27017/authdb?authSource=admin
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/ # Tell auth-service where Eureka is
    depends_on:
      - mongodb
      - eureka-server
    networks:
      - app-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongodb:27017/userdb?authSource=admin
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/ # Tell user-service where Eureka is
    depends_on:
      - mongodb
      - eureka-server
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-app
    ports:
      - "80:80" # Map host port 80 to container port 80 (Nginx default)
    networks:
      - app-network
    # depends_on: # Optional: Uncomment if frontend needs gateway to be ready
    #   - api-gateway 

# volumes:
#   mongodb_data:

networks:
  app-network:
    driver: bridge