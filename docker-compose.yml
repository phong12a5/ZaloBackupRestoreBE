services:
  nginx-proxy:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-proxy/conf.d:/etc/nginx/conf.d:ro
      - ./nginx-proxy/letsencrypt:/etc/letsencrypt
      - ./nginx-proxy/www:/var/www/certbot
    networks:
      - app-network
    depends_on:
      - api-gateway
      - frontend

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx-proxy/letsencrypt:/etc/letsencrypt
      - ./nginx-proxy/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot/; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network

  eureka-server:
    image: steeltoeoss/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - app-network

  mongodb:
    build:
      context: ./mongodb
      dockerfile: Dockerfile.mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ~/zalobr_data/mongo-data:/data/db
    networks:
      - app-network
      
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/ # Tell api-gateway where Eureka is
    depends_on:
      - eureka-server
    networks:
      - app-network
  
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongodb:27017/authdb?authSource=admin
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/ # Tell auth-service where Eureka is
    depends_on:
      - mongodb
      - eureka-server
    networks:
      - app-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongodb:27017/userdb?authSource=admin
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/ # Tell user-service where Eureka is
    depends_on:
      - mongodb
      - eureka-server
    networks:
      - app-network

  device-management-service:
    build:
      context: ./device-management-service
      dockerfile: Dockerfile
    container_name: device-management-service
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongodb:27017/backupdb?authSource=admin
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      - mongodb
      - eureka-server
    networks:
      - app-network
    volumes:
      - ~/zalobr_data/backup_data:/app/backups # Mount local folder ./backup_data to /app/backups in container
      - ~/zalobr_data/apk:/app/apk # Mount local folder ./apk to /app/apk in container
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-app
    networks:
      - app-network

networks:
  app-network:
    driver: bridge